name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libgtest-dev

    - name: Setup GCC
      if: matrix.compiler == 'gcc'
      run: |
        sudo apt-get install -y gcc-11 g++-11
        echo "CC=gcc-11" >> $GITHUB_ENV
        echo "CXX=g++-11" >> $GITHUB_ENV

    - name: Setup Clang
      if: matrix.compiler == 'clang'
      run: |
        sudo apt-get install -y clang-15
        echo "CC=clang-15" >> $GITHUB_ENV
        echo "CXX=clang++-15" >> $GITHUB_ENV

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON

    - name: Build
      run: |
        cd build
        cmake --build . --config Release

    - name: Test
      run: |
        cd build
        ./fast_math_test

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libgtest-dev lcov gcc-11 g++-11

    - name: Setup compiler environment
      run: |
        echo "CC=gcc-11" >> $GITHUB_ENV
        echo "CXX=g++-11" >> $GITHUB_ENV

    - name: Configure CMake with coverage
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DCMAKE_CXX_FLAGS="--coverage -g -O0"

    - name: Build
      run: |
        cd build
        make

    - name: Test
      run: |
        cd build
        ./fast_math_test

    - name: Generate coverage report
      run: |
        cd build
        lcov --gcov-tool gcov-11 --capture --directory . --output-file coverage.info --ignore-errors mismatch,source
        lcov --gcov-tool gcov-11 --remove coverage.info '/usr/*' --output-file coverage.info --ignore-errors mismatch
        lcov --gcov-tool gcov-11 --remove coverage.info '*/test/*' --output-file coverage.info --ignore-errors mismatch
        lcov --gcov-tool gcov-11 --list coverage.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./build/coverage.info
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
      continue-on-error: true

  performance-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential libgtest-dev

    - name: Configure CMake with optimizations
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DCMAKE_CXX_FLAGS="-O3 -march=native -ffast-math"

    - name: Build
      run: |
        cd build
        make

    - name: Run performance tests
      run: |
        cd build
        ./fast_math_test --gtest_filter="*PerformanceTest*" | tee performance_results.txt

    - name: Archive performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: build/performance_results.txt
      if: always()